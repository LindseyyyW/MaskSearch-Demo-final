{"ast":null,"code":"var _jsxFileName = \"/Users/lindseywei/MaskSearch/MaskSearchDemo/frontend/src/App.js\",\n  _s = $RefreshSig$();\n// src/App.js\nimport React, { useState } from 'react';\nimport InputSection from './components/InputSection';\nimport ResultsSection from './components/ResultsSection';\nimport ImageSelection from './components/ImageSelection';\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [imageIds, setImageIds] = useState([]);\n  const [selectedImageId, setSelectedImageId] = useState(null);\n  const [mode, setMode] = useState('Top-K'); // Adding mode state here\n\n  // Handle the search results from InputSection\n  const handleSearchResults = results => {\n    setImageIds(results); // Assuming results is an array of image IDs\n  };\n\n  //const handleStartAugment\n\n  // Function to update mode from InputSection\n  const handleModeChange = newMode => {\n    setMode(newMode); // Update the mode based on user selection\n  };\n\n  // Handle the selected image from ResultsSection\n  const handleImageClick = imageId => {\n    setSelectedImageId(imageId);\n  };\n\n  // Close the ImageSelection modal\n  const closeImageSelection = () => {\n    setSelectedImageId(null);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"app\",\n    children: [/*#__PURE__*/_jsxDEV(\"header\", {\n      className: \"app-header\",\n      children: \"MaskSearch\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"main-content\",\n      children: [/*#__PURE__*/_jsxDEV(InputSection, {\n        onSearchResults: handleSearchResults,\n        onModeChange: handleModeChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(ResultsSection, {\n        imageIds: imageIds,\n        onSelectImage: handleImageClick,\n        mode: mode\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 9\n    }, this), selectedImageId && /*#__PURE__*/_jsxDEV(ImageSelection, {\n      isOpen: !!selectedImageId,\n      imageId: selectedImageId,\n      onRequestClose: closeImageSelection\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 7\n  }, this);\n}\n_s(App, \"jI6p8s0xl6FAJ+EV3v5cce6c3ns=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","InputSection","ResultsSection","ImageSelection","jsxDEV","_jsxDEV","App","_s","imageIds","setImageIds","selectedImageId","setSelectedImageId","mode","setMode","handleSearchResults","results","handleModeChange","newMode","handleImageClick","imageId","closeImageSelection","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSearchResults","onModeChange","onSelectImage","isOpen","onRequestClose","_c","$RefreshReg$"],"sources":["/Users/lindseywei/MaskSearch/MaskSearchDemo/frontend/src/App.js"],"sourcesContent":["// src/App.js\nimport React, { useState } from 'react';\nimport InputSection from './components/InputSection';\nimport ResultsSection from './components/ResultsSection';\nimport ImageSelection from './components/ImageSelection';\nimport './App.css';\n\nfunction App() {\n  const [imageIds, setImageIds] = useState([]);\n  const [selectedImageId, setSelectedImageId] = useState(null);\n  const [mode, setMode] = useState('Top-K'); // Adding mode state here\n\n  // Handle the search results from InputSection\n  const handleSearchResults = (results) => {\n    setImageIds(results); // Assuming results is an array of image IDs\n  };\n\n  //const handleStartAugment\n  \n\n  // Function to update mode from InputSection\n  const handleModeChange = (newMode) => {\n    setMode(newMode); // Update the mode based on user selection\n  };\n\n  // Handle the selected image from ResultsSection\n  const handleImageClick = (imageId) => {\n    setSelectedImageId(imageId);\n  };\n\n  // Close the ImageSelection modal\n  const closeImageSelection = () => {\n    setSelectedImageId(null);\n  };\n\n  return (\n      <div className=\"app\">\n        <header className=\"app-header\">MaskSearch</header>\n        <div className=\"main-content\">\n          <InputSection onSearchResults={handleSearchResults} onModeChange={handleModeChange} />\n          <ResultsSection imageIds={imageIds} onSelectImage={handleImageClick} mode={mode} />\n        </div>\n        {selectedImageId && (\n            <ImageSelection\n                isOpen={!!selectedImageId}\n                imageId={selectedImageId}\n                onRequestClose={closeImageSelection}\n            />\n        )}\n      </div>\n  );\n}\n\nexport default App;\n"],"mappings":";;AAAA;AACA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,YAAY,MAAM,2BAA2B;AACpD,OAAOC,cAAc,MAAM,6BAA6B;AACxD,OAAOC,cAAc,MAAM,6BAA6B;AACxD,OAAO,WAAW;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEnB,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EACb,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAM,CAACU,eAAe,EAAEC,kBAAkB,CAAC,GAAGX,QAAQ,CAAC,IAAI,CAAC;EAC5D,MAAM,CAACY,IAAI,EAAEC,OAAO,CAAC,GAAGb,QAAQ,CAAC,OAAO,CAAC,CAAC,CAAC;;EAE3C;EACA,MAAMc,mBAAmB,GAAIC,OAAO,IAAK;IACvCN,WAAW,CAACM,OAAO,CAAC,CAAC,CAAC;EACxB,CAAC;;EAED;;EAGA;EACA,MAAMC,gBAAgB,GAAIC,OAAO,IAAK;IACpCJ,OAAO,CAACI,OAAO,CAAC,CAAC,CAAC;EACpB,CAAC;;EAED;EACA,MAAMC,gBAAgB,GAAIC,OAAO,IAAK;IACpCR,kBAAkB,CAACQ,OAAO,CAAC;EAC7B,CAAC;;EAED;EACA,MAAMC,mBAAmB,GAAGA,CAAA,KAAM;IAChCT,kBAAkB,CAAC,IAAI,CAAC;EAC1B,CAAC;EAED,oBACIN,OAAA;IAAKgB,SAAS,EAAC,KAAK;IAAAC,QAAA,gBAClBjB,OAAA;MAAQgB,SAAS,EAAC,YAAY;MAAAC,QAAA,EAAC;IAAU;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC,eAClDrB,OAAA;MAAKgB,SAAS,EAAC,cAAc;MAAAC,QAAA,gBAC3BjB,OAAA,CAACJ,YAAY;QAAC0B,eAAe,EAAEb,mBAAoB;QAACc,YAAY,EAAEZ;MAAiB;QAAAO,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,eACtFrB,OAAA,CAACH,cAAc;QAACM,QAAQ,EAAEA,QAAS;QAACqB,aAAa,EAAEX,gBAAiB;QAACN,IAAI,EAAEA;MAAK;QAAAW,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAChF,CAAC,EACLhB,eAAe,iBACZL,OAAA,CAACF,cAAc;MACX2B,MAAM,EAAE,CAAC,CAACpB,eAAgB;MAC1BS,OAAO,EAAET,eAAgB;MACzBqB,cAAc,EAAEX;IAAoB;MAAAG,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACvC,CACJ;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACE,CAAC;AAEZ;AAACnB,EAAA,CA5CQD,GAAG;AAAA0B,EAAA,GAAH1B,GAAG;AA8CZ,eAAeA,GAAG;AAAC,IAAA0B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}