{"ast":null,"code":"var _jsxFileName = \"/Users/lindseywei/MaskSearch/MaskSearchDemo/frontend/src/components/DataPreparation.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport CheckPopup from './CheckPopup';\nimport './DataPreparation.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst DataPreparation = () => {\n  _s();\n  const [misclassifiedCells, setMisclassifiedCells] = useState({});\n  const [selectedLines, setSelectedLines] = useState({});\n  const [selectedImages, setSelectedImages] = useState([]);\n  const [isPopupOpen, setIsPopupOpen] = useState(false);\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        const response = await fetch('http://localhost:8000/api/topk_search/pairs', {\n          method: 'POST',\n          headers: {\n            'Content-Type': 'application/json'\n          }\n        });\n        const data = await response.json();\n        setMisclassifiedCells(data);\n      } catch (error) {\n        console.error('Error fetching data:', error);\n      }\n    };\n    fetchData();\n  }, []);\n  console.log(misclassifiedCells);\n  const handleToggleSelect = index => {\n    setSelectedLines(prev => ({\n      ...prev,\n      [index]: !prev[index]\n    }));\n  };\n  const handleOpenPopup = imageIds => {\n    setSelectedImages(imageIds);\n    setIsPopupOpen(true);\n  };\n  const handleClosePopup = () => {\n    setIsPopupOpen(false);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Top-100 misclassified cells:\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"misclassified-list\",\n      children: Object.entries(misclassifiedCells).map(([key, imageIds], index) => {\n        const match = key.match(/\\((\\d+),(\\d+)\\)/);\n        const x = parseInt(match[1], 10);\n        const y = parseInt(match[2], 10);\n        const img = imageIds[0];\n        // console.log(x);\n        // console.log(y);\n        // console.log(key);\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          className: `misclassified-line ${selectedLines[index] ? 'selected' : ''}`,\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"cell-info\",\n            children: `${x} predicted as ${y}`\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 61,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n            src: `http://localhost:8000/topk_results/${x}.png`,\n            alt: `Image ${x}`,\n            className: \"larger-img\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 62,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n            src: `http://localhost:8000/topk_results/${img}.png`,\n            alt: `Image ${img}`,\n            className: \"larger-img\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 63,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n            src: `http://localhost:8000/topk_results/${y}.png`,\n            alt: `Image ${y}`,\n            className: \"larger-img\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 64,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"actions\",\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"custom-btn\",\n              onClick: () => handleOpenPopup(imageIds),\n              children: \"Check\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 66,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"custom-btn\",\n              onClick: () => handleToggleSelect(index),\n              children: selectedLines[index] ? 'Cancel Select' : 'Select'\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 67,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 65,\n            columnNumber: 29\n          }, this)]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 25\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(CheckPopup, {\n      images: selectedImages,\n      isOpen: isPopupOpen,\n      onClose: handleClosePopup\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Click \", /*#__PURE__*/_jsxDEV(Link, {\n        to: \"/input\",\n        children: \"here\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 22\n      }, this), \" to start query!\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 48,\n    columnNumber: 9\n  }, this);\n};\n_s(DataPreparation, \"NGO0uPF9NF8p7Bn9A6AVGzENaKo=\");\n_c = DataPreparation;\nexport default DataPreparation;\nvar _c;\n$RefreshReg$(_c, \"DataPreparation\");","map":{"version":3,"names":["React","useEffect","useState","Link","CheckPopup","jsxDEV","_jsxDEV","DataPreparation","_s","misclassifiedCells","setMisclassifiedCells","selectedLines","setSelectedLines","selectedImages","setSelectedImages","isPopupOpen","setIsPopupOpen","fetchData","response","fetch","method","headers","data","json","error","console","log","handleToggleSelect","index","prev","handleOpenPopup","imageIds","handleClosePopup","children","fileName","_jsxFileName","lineNumber","columnNumber","className","Object","entries","map","key","match","x","parseInt","y","img","src","alt","onClick","images","isOpen","onClose","to","_c","$RefreshReg$"],"sources":["/Users/lindseywei/MaskSearch/MaskSearchDemo/frontend/src/components/DataPreparation.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport CheckPopup from './CheckPopup';\r\nimport './DataPreparation.css';\r\n\r\nconst DataPreparation = () => {\r\n    const [misclassifiedCells, setMisclassifiedCells] = useState({});\r\n    const [selectedLines, setSelectedLines] = useState({});\r\n    const [selectedImages, setSelectedImages] = useState([]);\r\n    const [isPopupOpen, setIsPopupOpen] = useState(false);\r\n    \r\n    useEffect(() => {\r\n        const fetchData = async () => {\r\n            try {\r\n                const response = await fetch('http://localhost:8000/api/topk_search/pairs', {\r\n                    method: 'POST',\r\n                    headers: {\r\n                        'Content-Type': 'application/json',\r\n                    },\r\n                });\r\n                const data = await response.json();\r\n                setMisclassifiedCells(data);\r\n            } catch (error) {\r\n                console.error('Error fetching data:', error);\r\n            }\r\n        };\r\n\r\n        fetchData();\r\n    }, []);\r\n    console.log(misclassifiedCells);\r\n    const handleToggleSelect = (index) => {\r\n        setSelectedLines(prev => ({\r\n            ...prev,\r\n            [index]: !prev[index]\r\n        }));\r\n    };\r\n\r\n    const handleOpenPopup = (imageIds) => {\r\n        setSelectedImages(imageIds);\r\n        setIsPopupOpen(true);\r\n    };\r\n\r\n    const handleClosePopup = () => {\r\n        setIsPopupOpen(false);\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            <h1>Top-100 misclassified cells:</h1>\r\n            <div className=\"misclassified-list\">\r\n                {Object.entries(misclassifiedCells).map(([key, imageIds], index) => {\r\n                    const match = key.match(/\\((\\d+),(\\d+)\\)/);\r\n                    const x = parseInt(match[1], 10);\r\n                    const y = parseInt(match[2], 10);\r\n                    const img = imageIds[0]\r\n                    // console.log(x);\r\n                    // console.log(y);\r\n                    // console.log(key);\r\n                    return (\r\n                        <div key={index} className={`misclassified-line ${selectedLines[index] ? 'selected' : ''}`}>\r\n                            <div className=\"cell-info\">{`${x} predicted as ${y}`}</div>\r\n                            <img src={`http://localhost:8000/topk_results/${x}.png`} alt={`Image ${x}`} className=\"larger-img\" />\r\n                            <img src={`http://localhost:8000/topk_results/${img}.png`} alt={`Image ${img}`} className=\"larger-img\" />\r\n                            <img src={`http://localhost:8000/topk_results/${y}.png`} alt={`Image ${y}`} className=\"larger-img\" />\r\n                            <div className=\"actions\">\r\n                                <button className=\"custom-btn\" onClick={() => handleOpenPopup(imageIds)}>Check</button>\r\n                                <button className=\"custom-btn\" onClick={() => handleToggleSelect(index)}>\r\n                                    {selectedLines[index] ? 'Cancel Select' : 'Select'}\r\n                                </button>\r\n                            </div>\r\n                        </div>\r\n                    );\r\n                })}\r\n            </div>\r\n            <CheckPopup images={selectedImages} isOpen={isPopupOpen} onClose={handleClosePopup} />\r\n            <p>Click <Link to=\"/input\">here</Link> to start query!</p>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default DataPreparation;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}