{"ast":null,"code":"var _jsxFileName = \"/Users/linxiwei/Documents/MaskSearch/Archive/MSDemo/frontend/src/components/InputSection.js\",\n  _s = $RefreshSig$();\n// // src/components/InputSection.js\n// import React, { useState } from 'react';\n// import QueryCommand from './QueryCommand';\n// import './InputSection.css'; // Make sure to create this CSS file\n\n// function InputSection({ onSearchResults, onModeChange, isAug, ms, setExecutionTime}) {\n//     const [mode, setMode] = useState('Top-K');\n//     const [aug, setAug] = useState(false)\n//     const [k, setK] = useState('5');\n//     const [roi, setRoi] = useState('object bounding box');\n//     const [pixelUpperBound, setPixelUpperBound] = useState('1');\n//     const [pixelLowerBound, setPixelLowerBound] = useState('0.5');\n//     const [order, setOrder] = useState('ASC');\n//     const [threshold, setThreshold] = useState('0.2');\n//     const [thresholdDirection, setThresholdDirection] = useState('>');\n//     const [queryCommand, setQueryCommand] = useState('');\n//     const [isQueryActive, setIsQueryActive] = useState(false);\n//     const [isPathActive, setIsPathActive] = useState(false);\n//     const [latestImageIds, setLatestImageIds] = useState([]);\n\n//     const fetchQueryCommand = async (path, body) => {\n//         const response = await fetch(`http://localhost:9000${path}`, {\n//             method: 'POST',\n//             headers: {\n//                 'Content-Type': 'application/json',\n//             },\n//             body: JSON.stringify(body),\n//         });\n//         const data = await response.json();\n//         setQueryCommand(data.query_command);\n//         onSearchResults(data.image_ids);\n//         setExecutionTime(data.execution_time);  // Set execution time received from the backend\n//         //setIsQueryActive(true); // Enable the Augment button\n//         return data;\n//     };\n\n//     const handleStartQuery = async () => {\n//         handleAugment(false);\n//         let path, body;\n//         if (mode === 'Top-K') {\n//             path = '/api/topk_search';\n//             body = { k, roi, pixelUpperBound, pixelLowerBound, order, ms};\n//         } else {\n//             path = '/api/filter_search';\n//             body = { threshold, thresholdDirection, roi, pixelUpperBound, pixelLowerBound, ms};\n//         }\n\n//         const data = await fetchQueryCommand(path, body);\n//         setQueryCommand(data.query_command);\n//         onSearchResults(data.image_ids);\n//         setLatestImageIds(data.image_ids);\n//         //imgs = data.image_ids;\n//         setIsQueryActive(true); // Enable the Augment button\n//         await fetchQueryCommand(path, body);\n//     };\n\n//     const handleShowExecution = () => {\n//         // Implement later, make a window to show path\n//     };\n\n//     const handleStartAugment = async () => {\n//         handleAugment(true);\n//         const response = await fetch('http://localhost:9000/api/augment', {method: 'POST', headers: {\n//             'Content-Type': 'application/json',\n//         }, body: JSON.stringify({ image_ids: latestImageIds }),});\n//         const data = await response.json();\n//         // console.log('Augment result:', data.result);\n//         //let body = \n//         onSearchResults(data.image_ids);\n//         setIsPathActive(true);\n\n//     };\n\n//     const handleShowPath = () => {\n//         // Implement later, make a window to show path\n//     };\n\n//     const handleModeChange = (newMode) => {\n//         setMode(newMode); // Update local state\n//         setIsQueryActive(false); // Reset the active state when changing modes\n//         onModeChange(newMode); // Inform the parent component about the mode change\n//     };\n\n//     const handleAugment = (newaug) => {\n//         setAug(newaug);\n//         isAug(newaug);\n//     }\n\n//     return (\n//         <div className=\"input-section\">\n//             <div className=\"header\">\n//                 <h2 className=\"title\">{mode} Query</h2>\n//                 <div className=\"mode-switch\">\n//                     <button className={mode === 'Top-K' ? 'active' : ''} onClick={() => handleModeChange('Top-K')}>Top-K</button>\n//                     <button className={mode === 'Filter' ? 'active' : ''} onClick={() => handleModeChange('Filter')}>Filter</button>\n//                     <button className={mode === ''}>Aggregation</button>\n//                 </div>\n//             </div>\n//             {mode === 'Top-K' ? (\n//                 <>\n//                     {/* Top-K specific fields */}\n//                     <div className=\"input-container\">\n//                         <label htmlFor=\"K\" className=\"input-label\">K:</label>\n//                         <select id=\"k\" value={k} onChange={(e) => setK(e.target.value)} className=\"input-field\">\n//                             {[5, 10, 15, 20, 25].map(option => (\n//                                 <option key={option} value={option}>{option}</option>\n//                             ))}\n//                         </select>\n//                     </div>\n//                     <div className=\"input-container\">\n//                         <label htmlFor=\"ROI\" className=\"input-label\">ROI:</label>\n//                         <select id=\"roi\" value={roi} onChange={(e) => setRoi(e.target.value)} className=\"input-field\">\n//                             {['object bounding box', 'customizing box'].map(option => (\n//                                 <option key={option} value={option}>{option}</option>\n//                             ))}\n//                         </select>\n//                     </div>\n//                     <div className=\"input-container\">\n//                         <label htmlFor=\"pixelUpperBound\" className=\"input-label\">Pixel Value Upper Bound:</label>\n//                         <input\n//                             id=\"pixelUpperBound\"\n//                             type=\"text\"\n//                             value={pixelUpperBound}\n//                             onChange={(e) => setPixelUpperBound(e.target.value)}\n//                             className=\"input-field\"\n//                         />\n//                     </div>\n//                     <div className=\"input-container\">\n//                         <label htmlFor=\"pixelLowerBound\" className=\"input-label\">Pixel Value Lower Bound:</label>\n//                         <input\n//                             id=\"pixelLowerBound\"\n//                             type=\"text\"\n//                             value={pixelLowerBound}\n//                             onChange={(e) => setPixelLowerBound(e.target.value)}\n//                             className=\"input-field\"\n//                         />\n//                     </div>\n//                     <div className=\"input-container\">\n//                         <label htmlFor=\"Order\" className=\"input-label\">Order:</label>\n//                         <select id=\"order\" value={order} onChange={(e) => setOrder(e.target.value)} className=\"input-field\">\n//                             {['ASC', 'DESC'].map(option => (\n//                                 <option key={option} value={option}>{option}</option>\n//                             ))}\n//                         </select>\n//                     </div>\n//                 </>\n//             ) : (\n//                 <>\n//                     {/* Filter specific fields */}\n//                     <div className=\"input-container\">\n//                         <label htmlFor=\"threshold\" className=\"input-label\">Threshold:</label>\n//                         <div className=\"threshold-container\">\n//                             <select\n//                                 id=\"thresholdDirection\"\n//                                 value={thresholdDirection}\n//                                 onChange={(e) => setThresholdDirection(e.target.value)}\n//                                 className=\"threshold-field\"\n//                             >\n//                                 <option value=\">\">&gt;</option>\n//                                 <option value=\"<\">&lt;</option>\n//                             </select>\n//                             <input\n//                                 id=\"thresholdValue\"\n//                                 type=\"text\"\n//                                 value={threshold}\n//                                 onChange={(e) => setThreshold(e.target.value)}\n//                                 className=\"threshold-field\"\n//                             />\n//                         </div>\n//                     </div>\n//                     <div className=\"input-container\">\n//                         <label htmlFor=\"ROI\" className=\"input-label\">ROI:</label>\n//                         <select id=\"roi\" value={roi} onChange={(e) => setRoi(e.target.value)} className=\"input-field\">\n//                             {['object bounding box', 'customizing box'].map(option => (\n//                                 <option key={option} value={option}>{option}</option>\n//                             ))}\n//                         </select>\n//                     </div>\n//                     <div className=\"input-container\">\n//                         <label htmlFor=\"pixelUpperBound\" className=\"input-label\">Pixel Value Upper Bound:</label>\n//                         <input\n//                             id=\"pixelUpperBound\"\n//                             type=\"text\"\n//                             value={pixelUpperBound}\n//                             onChange={(e) => setPixelUpperBound(e.target.value)}\n//                             className=\"input-field\"\n//                         />\n//                     </div>\n//                     <div className=\"input-container\">\n//                         <label htmlFor=\"pixelLowerBound\" className=\"input-label\">Pixel Value Lower Bound:</label>\n//                         <input\n//                             id=\"pixelLowerBound\"\n//                             type=\"text\"\n//                             value={pixelLowerBound}\n//                             onChange={(e) => setPixelLowerBound(e.target.value)}\n//                             className=\"input-field\"\n//                         />\n//                     </div>\n//                 </>\n//             )}\n//             <div className=\"halfsize-buttons\">\n//                 <button className=\"start-halfsize-btn\" onClick={handleStartQuery}>\n//                     Start Query\n//                 </button>\n//                 <button className=\"start-halfsize-btn\" onClick={handleStartAugment} disabled={!isQueryActive}>\n//                     Augment\n//                 </button>\n//                 {/* <button className=\"appending-halfsize-btn\" onClick={handleShowExecution} disabled={!isQueryActive}>\n//                     Execution Detail\n//                 </button> */}\n//             </div>\n//             {/* <div className=\"halfsize-buttons\">\n//                 <button className=\"start-halfsize-btn\" onClick={handleStartAugment} disabled={!isQueryActive}>\n//                     Augment\n//                 </button>\n//                 <button className=\"appending-halfsize-btn\" onClick={handleShowPath} disabled={!isPathActive}>\n//                     Show Path\n//                 </button>\n//             </div> */}\n//             {/* <button onClick={() => {}} disabled={!isQueryActive}>Start Augment</button> */}\n//             <QueryCommand command={queryCommand} />\n//         </div>\n//     );\n// }\n\n// export default InputSection;\n\n// src/components/InputSection.js\nimport React, { useState } from 'react';\nimport QueryCommand from './QueryCommand';\nimport './InputSection.css';\n\n// TODO: Add the field for augment\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction InputSection({\n  onSearchResults,\n  onModeChange,\n  setExecutionTime\n}) {\n  _s();\n  const [mode, setMode] = useState('Top-K');\n  const [k, setK] = useState('5');\n  const [roi, setRoi] = useState('object bounding box');\n  const [pixelUpperBound, setPixelUpperBound] = useState('1');\n  const [pixelLowerBound, setPixelLowerBound] = useState('0.5');\n  const [order, setOrder] = useState('ASC');\n  const [threshold, setThreshold] = useState('0.2');\n  const [thresholdDirection, setThresholdDirection] = useState('>');\n  const [queryCommand, setQueryCommand] = useState('');\n  const [isQueryActive, setIsQueryActive] = useState(false);\n  const [isPathActive, setIsPathActive] = useState(false);\n  const fetchQueryCommand = async (path, body) => {\n    const response = await fetch(`http://localhost:8000${path}`, {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(body)\n    });\n    const data = await response.json();\n    setQueryCommand(data.query_command);\n    onSearchResults(data.image_ids);\n    setExecutionTime(data.execution_time); // Set execution time received from the backend\n    setIsQueryActive(true); // Enable the Augment button\n    return data;\n  };\n  const handleStartQuery = async () => {\n    let path, body;\n    if (mode === 'Top-K') {\n      path = '/api/topk_search';\n      body = {\n        k,\n        roi,\n        pixelUpperBound,\n        pixelLowerBound,\n        order\n      };\n    }\n    if (mode === 'Filter') {\n      path = '/api/filter_search';\n      body = {\n        threshold,\n        thresholdDirection,\n        roi,\n        pixelUpperBound,\n        pixelLowerBound\n      };\n    }\n    if (mode === 'Aggregation') {\n      path = '/api/filter_search';\n      body = {\n        threshold,\n        thresholdDirection,\n        roi,\n        pixelUpperBound,\n        pixelLowerBound\n      };\n    }\n    await fetchQueryCommand(path, body);\n  };\n  const handleShowExecution = () => {\n    // Implement later, make a window to show path\n  };\n  const handleStartAugment = async () => {\n    // const response = await fetch('http://localhost:5000/api/augment');\n    // const data = await response.json();\n    // console.log('Augment result:', data.result);\n    setIsPathActive(true);\n    // TODO: Set the status of augment to true, other necessary implementation for augment\n  };\n  const handleShowPath = () => {\n    // Implement later, make a window to show path\n  };\n  const handleModeChange = newMode => {\n    setMode(newMode); // Update local state\n    setIsQueryActive(false); // Reset the active state when changing modes\n    onModeChange(newMode); // Inform the parent component about the mode change\n    // TODO: Reset the status of augment to false when changing modes\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"input-section\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"header\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"title\",\n        children: mode\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 311,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mode-switch\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          className: mode === 'Top-K' ? 'active' : '',\n          onClick: () => handleModeChange('Top-K'),\n          children: \"Top-K\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 313,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: mode === 'Filter' ? 'active' : '',\n          onClick: () => handleModeChange('Filter'),\n          children: \"Filter\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 314,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: mode === 'Aggregation' ? 'active' : '',\n          onClick: () => handleModeChange('Aggregation'),\n          children: \"Aggregation\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 315,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 312,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 310,\n      columnNumber: 13\n    }, this), mode === 'Top-K' ? /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"input-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"K\",\n          className: \"input-label\",\n          children: \"K:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 322,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n          id: \"k\",\n          value: k,\n          onChange: e => setK(e.target.value),\n          className: \"input-field\",\n          children: [5, 10, 15, 20, 25].map(option => /*#__PURE__*/_jsxDEV(\"option\", {\n            value: option,\n            children: option\n          }, option, false, {\n            fileName: _jsxFileName,\n            lineNumber: 325,\n            columnNumber: 33\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 323,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 321,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"input-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"ROI\",\n          className: \"input-label\",\n          children: \"ROI:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 330,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n          id: \"roi\",\n          value: roi,\n          onChange: e => setRoi(e.target.value),\n          className: \"input-field\",\n          children: ['object bounding box', 'customizing box'].map(option => /*#__PURE__*/_jsxDEV(\"option\", {\n            value: option,\n            children: option\n          }, option, false, {\n            fileName: _jsxFileName,\n            lineNumber: 333,\n            columnNumber: 33\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 331,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 329,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"input-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"pixelUpperBound\",\n          className: \"input-label\",\n          children: \"Pixel Value Upper Bound:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 338,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          id: \"pixelUpperBound\",\n          type: \"text\",\n          value: pixelUpperBound,\n          onChange: e => setPixelUpperBound(e.target.value),\n          className: \"input-field\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 339,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 337,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"input-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"pixelLowerBound\",\n          className: \"input-label\",\n          children: \"Pixel Value Lower Bound:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 348,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          id: \"pixelLowerBound\",\n          type: \"text\",\n          value: pixelLowerBound,\n          onChange: e => setPixelLowerBound(e.target.value),\n          className: \"input-field\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 349,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 347,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"input-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"Order\",\n          className: \"input-label\",\n          children: \"Order:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 358,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n          id: \"order\",\n          value: order,\n          onChange: e => setOrder(e.target.value),\n          className: \"input-field\",\n          children: ['ASC', 'DESC'].map(option => /*#__PURE__*/_jsxDEV(\"option\", {\n            value: option,\n            children: option\n          }, option, false, {\n            fileName: _jsxFileName,\n            lineNumber: 361,\n            columnNumber: 33\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 359,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 357,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true) : mode === 'Filter' ? /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"input-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"threshold\",\n          className: \"input-label\",\n          children: \"Threshold:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 370,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"threshold-container\",\n          children: [/*#__PURE__*/_jsxDEV(\"select\", {\n            id: \"thresholdDirection\",\n            value: thresholdDirection,\n            onChange: e => setThresholdDirection(e.target.value),\n            className: \"threshold-field\",\n            children: [/*#__PURE__*/_jsxDEV(\"option\", {\n              value: \">\",\n              children: \">\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 378,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"<\",\n              children: \"<\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 379,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 372,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            id: \"thresholdValue\",\n            type: \"text\",\n            value: threshold,\n            onChange: e => setThreshold(e.target.value),\n            className: \"threshold-field\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 381,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 371,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 369,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"input-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"ROI\",\n          className: \"input-label\",\n          children: \"ROI:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 391,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n          id: \"roi\",\n          value: roi,\n          onChange: e => setRoi(e.target.value),\n          className: \"input-field\",\n          children: ['object bounding box', 'customizing box'].map(option => /*#__PURE__*/_jsxDEV(\"option\", {\n            value: option,\n            children: option\n          }, option, false, {\n            fileName: _jsxFileName,\n            lineNumber: 394,\n            columnNumber: 33\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 392,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 390,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"input-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"pixelUpperBound\",\n          className: \"input-label\",\n          children: \"Pixel Value Upper Bound:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 399,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          id: \"pixelUpperBound\",\n          type: \"text\",\n          value: pixelUpperBound,\n          onChange: e => setPixelUpperBound(e.target.value),\n          className: \"input-field\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 400,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 398,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"input-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"pixelLowerBound\",\n          className: \"input-label\",\n          children: \"Pixel Value Lower Bound:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 409,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          id: \"pixelLowerBound\",\n          type: \"text\",\n          value: pixelLowerBound,\n          onChange: e => setPixelLowerBound(e.target.value),\n          className: \"input-field\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 410,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 408,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true) : /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"input-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"threshold\",\n          className: \"input-label\",\n          children: \"Threshold:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 423,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"threshold-container\",\n          children: [/*#__PURE__*/_jsxDEV(\"select\", {\n            id: \"thresholdDirection\",\n            value: thresholdDirection,\n            onChange: e => setThresholdDirection(e.target.value),\n            className: \"threshold-field\",\n            children: [/*#__PURE__*/_jsxDEV(\"option\", {\n              value: \">\",\n              children: \">\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 431,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"<\",\n              children: \"<\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 432,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 425,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            id: \"thresholdValue\",\n            type: \"text\",\n            value: threshold,\n            onChange: e => setThreshold(e.target.value),\n            className: \"threshold-field\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 434,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 424,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 422,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"input-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"ROI\",\n          className: \"input-label\",\n          children: \"ROI:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 444,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n          id: \"roi\",\n          value: roi,\n          onChange: e => setRoi(e.target.value),\n          className: \"input-field\",\n          children: ['object bounding box', 'customizing box'].map(option => /*#__PURE__*/_jsxDEV(\"option\", {\n            value: option,\n            children: option\n          }, option, false, {\n            fileName: _jsxFileName,\n            lineNumber: 447,\n            columnNumber: 33\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 445,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 443,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"input-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"pixelUpperBound\",\n          className: \"input-label\",\n          children: \"Pixel Value Upper Bound:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 452,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          id: \"pixelUpperBound\",\n          type: \"text\",\n          value: pixelUpperBound,\n          onChange: e => setPixelUpperBound(e.target.value),\n          className: \"input-field\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 453,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 451,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"input-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"pixelLowerBound\",\n          className: \"input-label\",\n          children: \"Pixel Value Lower Bound:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 462,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          id: \"pixelLowerBound\",\n          type: \"text\",\n          value: pixelLowerBound,\n          onChange: e => setPixelLowerBound(e.target.value),\n          className: \"input-field\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 463,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 461,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"halfsize-buttons\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"start-halfsize-btn\",\n        onClick: handleStartQuery,\n        children: \"Start Query\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 474,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"appending-halfsize-btn\",\n        onClick: handleShowExecution,\n        disabled: !isQueryActive,\n        children: \"Execution Detail\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 477,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 473,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"halfsize-buttons\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"start-halfsize-btn\",\n        onClick: handleStartAugment,\n        children: \"Start Augment\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 482,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"appending-halfsize-btn\",\n        onClick: handleShowPath,\n        disabled: !isPathActive,\n        children: \"Show Path\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 485,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 481,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(QueryCommand, {\n      command: queryCommand\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 490,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 309,\n    columnNumber: 9\n  }, this);\n}\n_s(InputSection, \"PcovGvBck3QZlJW6bIY9PtJW/0s=\");\n_c = InputSection;\nexport default InputSection;\nvar _c;\n$RefreshReg$(_c, \"InputSection\");","map":{"version":3,"names":["React","useState","QueryCommand","jsxDEV","_jsxDEV","Fragment","_Fragment","InputSection","onSearchResults","onModeChange","setExecutionTime","_s","mode","setMode","k","setK","roi","setRoi","pixelUpperBound","setPixelUpperBound","pixelLowerBound","setPixelLowerBound","order","setOrder","threshold","setThreshold","thresholdDirection","setThresholdDirection","queryCommand","setQueryCommand","isQueryActive","setIsQueryActive","isPathActive","setIsPathActive","fetchQueryCommand","path","body","response","fetch","method","headers","JSON","stringify","data","json","query_command","image_ids","execution_time","handleStartQuery","handleShowExecution","handleStartAugment","handleShowPath","handleModeChange","newMode","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","htmlFor","id","value","onChange","e","target","map","option","type","disabled","command","_c","$RefreshReg$"],"sources":["/Users/linxiwei/Documents/MaskSearch/Archive/MSDemo/frontend/src/components/InputSection.js"],"sourcesContent":["// // src/components/InputSection.js\n// import React, { useState } from 'react';\n// import QueryCommand from './QueryCommand';\n// import './InputSection.css'; // Make sure to create this CSS file\n\n// function InputSection({ onSearchResults, onModeChange, isAug, ms, setExecutionTime}) {\n//     const [mode, setMode] = useState('Top-K');\n//     const [aug, setAug] = useState(false)\n//     const [k, setK] = useState('5');\n//     const [roi, setRoi] = useState('object bounding box');\n//     const [pixelUpperBound, setPixelUpperBound] = useState('1');\n//     const [pixelLowerBound, setPixelLowerBound] = useState('0.5');\n//     const [order, setOrder] = useState('ASC');\n//     const [threshold, setThreshold] = useState('0.2');\n//     const [thresholdDirection, setThresholdDirection] = useState('>');\n//     const [queryCommand, setQueryCommand] = useState('');\n//     const [isQueryActive, setIsQueryActive] = useState(false);\n//     const [isPathActive, setIsPathActive] = useState(false);\n//     const [latestImageIds, setLatestImageIds] = useState([]);\n\n\n//     const fetchQueryCommand = async (path, body) => {\n//         const response = await fetch(`http://localhost:9000${path}`, {\n//             method: 'POST',\n//             headers: {\n//                 'Content-Type': 'application/json',\n//             },\n//             body: JSON.stringify(body),\n//         });\n//         const data = await response.json();\n//         setQueryCommand(data.query_command);\n//         onSearchResults(data.image_ids);\n//         setExecutionTime(data.execution_time);  // Set execution time received from the backend\n//         //setIsQueryActive(true); // Enable the Augment button\n//         return data;\n//     };\n\n    \n\n//     const handleStartQuery = async () => {\n//         handleAugment(false);\n//         let path, body;\n//         if (mode === 'Top-K') {\n//             path = '/api/topk_search';\n//             body = { k, roi, pixelUpperBound, pixelLowerBound, order, ms};\n//         } else {\n//             path = '/api/filter_search';\n//             body = { threshold, thresholdDirection, roi, pixelUpperBound, pixelLowerBound, ms};\n//         }\n\n//         const data = await fetchQueryCommand(path, body);\n//         setQueryCommand(data.query_command);\n//         onSearchResults(data.image_ids);\n//         setLatestImageIds(data.image_ids);\n//         //imgs = data.image_ids;\n//         setIsQueryActive(true); // Enable the Augment button\n//         await fetchQueryCommand(path, body);\n//     };\n\n//     const handleShowExecution = () => {\n//         // Implement later, make a window to show path\n//     };\n\n//     const handleStartAugment = async () => {\n//         handleAugment(true);\n//         const response = await fetch('http://localhost:9000/api/augment', {method: 'POST', headers: {\n//             'Content-Type': 'application/json',\n//         }, body: JSON.stringify({ image_ids: latestImageIds }),});\n//         const data = await response.json();\n//         // console.log('Augment result:', data.result);\n//         //let body = \n//         onSearchResults(data.image_ids);\n//         setIsPathActive(true);\n        \n//     };\n\n//     const handleShowPath = () => {\n//         // Implement later, make a window to show path\n//     };\n\n//     const handleModeChange = (newMode) => {\n//         setMode(newMode); // Update local state\n//         setIsQueryActive(false); // Reset the active state when changing modes\n//         onModeChange(newMode); // Inform the parent component about the mode change\n//     };\n\n//     const handleAugment = (newaug) => {\n//         setAug(newaug);\n//         isAug(newaug);\n//     }\n\n//     return (\n//         <div className=\"input-section\">\n//             <div className=\"header\">\n//                 <h2 className=\"title\">{mode} Query</h2>\n//                 <div className=\"mode-switch\">\n//                     <button className={mode === 'Top-K' ? 'active' : ''} onClick={() => handleModeChange('Top-K')}>Top-K</button>\n//                     <button className={mode === 'Filter' ? 'active' : ''} onClick={() => handleModeChange('Filter')}>Filter</button>\n//                     <button className={mode === ''}>Aggregation</button>\n//                 </div>\n//             </div>\n//             {mode === 'Top-K' ? (\n//                 <>\n//                     {/* Top-K specific fields */}\n//                     <div className=\"input-container\">\n//                         <label htmlFor=\"K\" className=\"input-label\">K:</label>\n//                         <select id=\"k\" value={k} onChange={(e) => setK(e.target.value)} className=\"input-field\">\n//                             {[5, 10, 15, 20, 25].map(option => (\n//                                 <option key={option} value={option}>{option}</option>\n//                             ))}\n//                         </select>\n//                     </div>\n//                     <div className=\"input-container\">\n//                         <label htmlFor=\"ROI\" className=\"input-label\">ROI:</label>\n//                         <select id=\"roi\" value={roi} onChange={(e) => setRoi(e.target.value)} className=\"input-field\">\n//                             {['object bounding box', 'customizing box'].map(option => (\n//                                 <option key={option} value={option}>{option}</option>\n//                             ))}\n//                         </select>\n//                     </div>\n//                     <div className=\"input-container\">\n//                         <label htmlFor=\"pixelUpperBound\" className=\"input-label\">Pixel Value Upper Bound:</label>\n//                         <input\n//                             id=\"pixelUpperBound\"\n//                             type=\"text\"\n//                             value={pixelUpperBound}\n//                             onChange={(e) => setPixelUpperBound(e.target.value)}\n//                             className=\"input-field\"\n//                         />\n//                     </div>\n//                     <div className=\"input-container\">\n//                         <label htmlFor=\"pixelLowerBound\" className=\"input-label\">Pixel Value Lower Bound:</label>\n//                         <input\n//                             id=\"pixelLowerBound\"\n//                             type=\"text\"\n//                             value={pixelLowerBound}\n//                             onChange={(e) => setPixelLowerBound(e.target.value)}\n//                             className=\"input-field\"\n//                         />\n//                     </div>\n//                     <div className=\"input-container\">\n//                         <label htmlFor=\"Order\" className=\"input-label\">Order:</label>\n//                         <select id=\"order\" value={order} onChange={(e) => setOrder(e.target.value)} className=\"input-field\">\n//                             {['ASC', 'DESC'].map(option => (\n//                                 <option key={option} value={option}>{option}</option>\n//                             ))}\n//                         </select>\n//                     </div>\n//                 </>\n//             ) : (\n//                 <>\n//                     {/* Filter specific fields */}\n//                     <div className=\"input-container\">\n//                         <label htmlFor=\"threshold\" className=\"input-label\">Threshold:</label>\n//                         <div className=\"threshold-container\">\n//                             <select\n//                                 id=\"thresholdDirection\"\n//                                 value={thresholdDirection}\n//                                 onChange={(e) => setThresholdDirection(e.target.value)}\n//                                 className=\"threshold-field\"\n//                             >\n//                                 <option value=\">\">&gt;</option>\n//                                 <option value=\"<\">&lt;</option>\n//                             </select>\n//                             <input\n//                                 id=\"thresholdValue\"\n//                                 type=\"text\"\n//                                 value={threshold}\n//                                 onChange={(e) => setThreshold(e.target.value)}\n//                                 className=\"threshold-field\"\n//                             />\n//                         </div>\n//                     </div>\n//                     <div className=\"input-container\">\n//                         <label htmlFor=\"ROI\" className=\"input-label\">ROI:</label>\n//                         <select id=\"roi\" value={roi} onChange={(e) => setRoi(e.target.value)} className=\"input-field\">\n//                             {['object bounding box', 'customizing box'].map(option => (\n//                                 <option key={option} value={option}>{option}</option>\n//                             ))}\n//                         </select>\n//                     </div>\n//                     <div className=\"input-container\">\n//                         <label htmlFor=\"pixelUpperBound\" className=\"input-label\">Pixel Value Upper Bound:</label>\n//                         <input\n//                             id=\"pixelUpperBound\"\n//                             type=\"text\"\n//                             value={pixelUpperBound}\n//                             onChange={(e) => setPixelUpperBound(e.target.value)}\n//                             className=\"input-field\"\n//                         />\n//                     </div>\n//                     <div className=\"input-container\">\n//                         <label htmlFor=\"pixelLowerBound\" className=\"input-label\">Pixel Value Lower Bound:</label>\n//                         <input\n//                             id=\"pixelLowerBound\"\n//                             type=\"text\"\n//                             value={pixelLowerBound}\n//                             onChange={(e) => setPixelLowerBound(e.target.value)}\n//                             className=\"input-field\"\n//                         />\n//                     </div>\n//                 </>\n//             )}\n//             <div className=\"halfsize-buttons\">\n//                 <button className=\"start-halfsize-btn\" onClick={handleStartQuery}>\n//                     Start Query\n//                 </button>\n//                 <button className=\"start-halfsize-btn\" onClick={handleStartAugment} disabled={!isQueryActive}>\n//                     Augment\n//                 </button>\n//                 {/* <button className=\"appending-halfsize-btn\" onClick={handleShowExecution} disabled={!isQueryActive}>\n//                     Execution Detail\n//                 </button> */}\n//             </div>\n//             {/* <div className=\"halfsize-buttons\">\n//                 <button className=\"start-halfsize-btn\" onClick={handleStartAugment} disabled={!isQueryActive}>\n//                     Augment\n//                 </button>\n//                 <button className=\"appending-halfsize-btn\" onClick={handleShowPath} disabled={!isPathActive}>\n//                     Show Path\n//                 </button>\n//             </div> */}\n//             {/* <button onClick={() => {}} disabled={!isQueryActive}>Start Augment</button> */}\n//             <QueryCommand command={queryCommand} />\n//         </div>\n//     );\n// }\n\n// export default InputSection;\n\n// src/components/InputSection.js\nimport React, { useState } from 'react';\nimport QueryCommand from './QueryCommand';\nimport './InputSection.css';\n\n// TODO: Add the field for augment\nfunction InputSection({ onSearchResults, onModeChange, setExecutionTime }) {\n    const [mode, setMode] = useState('Top-K');\n    const [k, setK] = useState('5');\n    const [roi, setRoi] = useState('object bounding box');\n    const [pixelUpperBound, setPixelUpperBound] = useState('1');\n    const [pixelLowerBound, setPixelLowerBound] = useState('0.5');\n    const [order, setOrder] = useState('ASC');\n    const [threshold, setThreshold] = useState('0.2');\n    const [thresholdDirection, setThresholdDirection] = useState('>');\n    const [queryCommand, setQueryCommand] = useState('');\n    const [isQueryActive, setIsQueryActive] = useState(false);\n    const [isPathActive, setIsPathActive] = useState(false);\n\n\n    const fetchQueryCommand = async (path, body) => {\n        const response = await fetch(`http://localhost:8000${path}`, {\n            method: 'POST',\n            headers: {\n                'Content-Type': 'application/json',\n            },\n            body: JSON.stringify(body),\n        });\n        const data = await response.json();\n        setQueryCommand(data.query_command);\n        onSearchResults(data.image_ids);\n        setExecutionTime(data.execution_time);  // Set execution time received from the backend\n        setIsQueryActive(true); // Enable the Augment button\n        return data;\n    };\n\n    const handleStartQuery = async () => {\n        let path, body;\n        if (mode === 'Top-K') {\n            path = '/api/topk_search';\n            body = { k, roi, pixelUpperBound, pixelLowerBound, order };\n        } \n        if (mode === 'Filter') {\n            path = '/api/filter_search';\n            body = { threshold, thresholdDirection, roi, pixelUpperBound, pixelLowerBound };\n        }\n        if (mode === 'Aggregation') {\n            path = '/api/filter_search';\n            body = { threshold, thresholdDirection, roi, pixelUpperBound, pixelLowerBound };\n        }\n\n        await fetchQueryCommand(path, body);\n    };\n\n    const handleShowExecution = () => {\n        // Implement later, make a window to show path\n    };\n\n    const handleStartAugment = async () => {\n        // const response = await fetch('http://localhost:5000/api/augment');\n        // const data = await response.json();\n        // console.log('Augment result:', data.result);\n        setIsPathActive(true);\n        // TODO: Set the status of augment to true, other necessary implementation for augment\n    };\n\n    const handleShowPath = () => {\n        // Implement later, make a window to show path\n    };\n\n    const handleModeChange = (newMode) => {\n        setMode(newMode); // Update local state\n        setIsQueryActive(false); // Reset the active state when changing modes\n        onModeChange(newMode); // Inform the parent component about the mode change\n        // TODO: Reset the status of augment to false when changing modes\n    };\n\n    return (\n        <div className=\"input-section\">\n            <div className=\"header\">\n                <h2 className=\"title\">{mode}</h2>\n                <div className=\"mode-switch\">\n                    <button className={mode === 'Top-K' ? 'active' : ''} onClick={() => handleModeChange('Top-K')}>Top-K</button>\n                    <button className={mode === 'Filter' ? 'active' : ''} onClick={() => handleModeChange('Filter')}>Filter</button>\n                    <button className={mode === 'Aggregation' ? 'active' : ''} onClick={() => handleModeChange('Aggregation')}>Aggregation</button>\n                </div>\n            </div>\n            {mode === 'Top-K' ? (\n                <>\n                    {/* Top-K specific fields */}\n                    <div className=\"input-container\">\n                        <label htmlFor=\"K\" className=\"input-label\">K:</label>\n                        <select id=\"k\" value={k} onChange={(e) => setK(e.target.value)} className=\"input-field\">\n                            {[5, 10, 15, 20, 25].map(option => (\n                                <option key={option} value={option}>{option}</option>\n                            ))}\n                        </select>\n                    </div>\n                    <div className=\"input-container\">\n                        <label htmlFor=\"ROI\" className=\"input-label\">ROI:</label>\n                        <select id=\"roi\" value={roi} onChange={(e) => setRoi(e.target.value)} className=\"input-field\">\n                            {['object bounding box', 'customizing box'].map(option => (\n                                <option key={option} value={option}>{option}</option>\n                            ))}\n                        </select>\n                    </div>\n                    <div className=\"input-container\">\n                        <label htmlFor=\"pixelUpperBound\" className=\"input-label\">Pixel Value Upper Bound:</label>\n                        <input\n                            id=\"pixelUpperBound\"\n                            type=\"text\"\n                            value={pixelUpperBound}\n                            onChange={(e) => setPixelUpperBound(e.target.value)}\n                            className=\"input-field\"\n                        />\n                    </div>\n                    <div className=\"input-container\">\n                        <label htmlFor=\"pixelLowerBound\" className=\"input-label\">Pixel Value Lower Bound:</label>\n                        <input\n                            id=\"pixelLowerBound\"\n                            type=\"text\"\n                            value={pixelLowerBound}\n                            onChange={(e) => setPixelLowerBound(e.target.value)}\n                            className=\"input-field\"\n                        />\n                    </div>\n                    <div className=\"input-container\">\n                        <label htmlFor=\"Order\" className=\"input-label\">Order:</label>\n                        <select id=\"order\" value={order} onChange={(e) => setOrder(e.target.value)} className=\"input-field\">\n                            {['ASC', 'DESC'].map(option => (\n                                <option key={option} value={option}>{option}</option>\n                            ))}\n                        </select>\n                    </div>\n                </>\n            ) : mode === 'Filter' ? (\n                <>\n                    {/* Filter specific fields */}\n                    <div className=\"input-container\">\n                        <label htmlFor=\"threshold\" className=\"input-label\">Threshold:</label>\n                        <div className=\"threshold-container\">\n                            <select\n                                id=\"thresholdDirection\"\n                                value={thresholdDirection}\n                                onChange={(e) => setThresholdDirection(e.target.value)}\n                                className=\"threshold-field\"\n                            >\n                                <option value=\">\">&gt;</option>\n                                <option value=\"<\">&lt;</option>\n                            </select>\n                            <input\n                                id=\"thresholdValue\"\n                                type=\"text\"\n                                value={threshold}\n                                onChange={(e) => setThreshold(e.target.value)}\n                                className=\"threshold-field\"\n                            />\n                        </div>\n                    </div>\n                    <div className=\"input-container\">\n                        <label htmlFor=\"ROI\" className=\"input-label\">ROI:</label>\n                        <select id=\"roi\" value={roi} onChange={(e) => setRoi(e.target.value)} className=\"input-field\">\n                            {['object bounding box', 'customizing box'].map(option => (\n                                <option key={option} value={option}>{option}</option>\n                            ))}\n                        </select>\n                    </div>\n                    <div className=\"input-container\">\n                        <label htmlFor=\"pixelUpperBound\" className=\"input-label\">Pixel Value Upper Bound:</label>\n                        <input\n                            id=\"pixelUpperBound\"\n                            type=\"text\"\n                            value={pixelUpperBound}\n                            onChange={(e) => setPixelUpperBound(e.target.value)}\n                            className=\"input-field\"\n                        />\n                    </div>\n                    <div className=\"input-container\">\n                        <label htmlFor=\"pixelLowerBound\" className=\"input-label\">Pixel Value Lower Bound:</label>\n                        <input\n                            id=\"pixelLowerBound\"\n                            type=\"text\"\n                            value={pixelLowerBound}\n                            onChange={(e) => setPixelLowerBound(e.target.value)}\n                            className=\"input-field\"\n                        />\n                    </div>\n                </>\n            ) : (\n                <>\n                    {/* Filter specific fields */}\n                    <div className=\"input-container\">\n                        <label htmlFor=\"threshold\" className=\"input-label\">Threshold:</label>\n                        <div className=\"threshold-container\">\n                            <select\n                                id=\"thresholdDirection\"\n                                value={thresholdDirection}\n                                onChange={(e) => setThresholdDirection(e.target.value)}\n                                className=\"threshold-field\"\n                            >\n                                <option value=\">\">&gt;</option>\n                                <option value=\"<\">&lt;</option>\n                            </select>\n                            <input\n                                id=\"thresholdValue\"\n                                type=\"text\"\n                                value={threshold}\n                                onChange={(e) => setThreshold(e.target.value)}\n                                className=\"threshold-field\"\n                            />\n                        </div>\n                    </div>\n                    <div className=\"input-container\">\n                        <label htmlFor=\"ROI\" className=\"input-label\">ROI:</label>\n                        <select id=\"roi\" value={roi} onChange={(e) => setRoi(e.target.value)} className=\"input-field\">\n                            {['object bounding box', 'customizing box'].map(option => (\n                                <option key={option} value={option}>{option}</option>\n                            ))}\n                        </select>\n                    </div>\n                    <div className=\"input-container\">\n                        <label htmlFor=\"pixelUpperBound\" className=\"input-label\">Pixel Value Upper Bound:</label>\n                        <input\n                            id=\"pixelUpperBound\"\n                            type=\"text\"\n                            value={pixelUpperBound}\n                            onChange={(e) => setPixelUpperBound(e.target.value)}\n                            className=\"input-field\"\n                        />\n                    </div>\n                    <div className=\"input-container\">\n                        <label htmlFor=\"pixelLowerBound\" className=\"input-label\">Pixel Value Lower Bound:</label>\n                        <input\n                            id=\"pixelLowerBound\"\n                            type=\"text\"\n                            value={pixelLowerBound}\n                            onChange={(e) => setPixelLowerBound(e.target.value)}\n                            className=\"input-field\"\n                        />\n                    </div>\n                </>\n            ) }\n            <div className=\"halfsize-buttons\">\n                <button className=\"start-halfsize-btn\" onClick={handleStartQuery}>\n                    Start Query\n                </button>\n                <button className=\"appending-halfsize-btn\" onClick={handleShowExecution} disabled={!isQueryActive}>\n                    Execution Detail\n                </button>\n            </div>\n            <div className=\"halfsize-buttons\">\n                <button className=\"start-halfsize-btn\" onClick={handleStartAugment}>\n                    Start Augment\n                </button>\n                <button className=\"appending-halfsize-btn\" onClick={handleShowPath} disabled={!isPathActive}>\n                    Show Path\n                </button>\n            </div>\n            {/* <button onClick={() => {}} disabled={!isQueryActive}>Start Augment</button> */}\n            <QueryCommand command={queryCommand} />\n        </div>\n    );\n}\n\nexport default InputSection;"],"mappings":";;AAAA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,YAAY,MAAM,gBAAgB;AACzC,OAAO,oBAAoB;;AAE3B;AAAA,SAAAC,MAAA,IAA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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}