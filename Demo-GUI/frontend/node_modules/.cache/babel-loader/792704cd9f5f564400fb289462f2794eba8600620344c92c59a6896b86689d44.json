{"ast":null,"code":"var _jsxFileName = \"/Users/hjyu/Documents/UW/Projects/MaskSearch/MaskSearch-Demo-final/Demo-GUI/frontend/src/components/Modal.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport Chart from 'chart.js/auto';\nimport './Modal.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Modal = ({\n  isModalOpen,\n  loadedCount,\n  totalCount,\n  onClose\n}) => {\n  _s();\n  useEffect(() => {\n    if (isModalOpen) {\n      console.log(\"here\");\n      const ctx = document.getElementById('myChart');\n      const data = {\n        labels: ['Number of masks loaded from disk', 'Number of masks skipped'],\n        datasets: [{\n          label: 'Comparison of Loaded Masks vs. Skipped Masks',\n          data: [parseFloat(loadedCount), parseFloat(totalCount - loadedCount)],\n          backgroundColor: ['rgb(255, 99, 132)', 'rgb(54, 162, 235)'],\n          hoverOffset: 4\n        }]\n      };\n      const config = {\n        type: 'pie',\n        data: data,\n        options: {\n          responsive: true,\n          maintainAspectRatio: false\n        }\n      };\n      //Destroy existing chart instance before creating a new one\n      if (ctx.chart) {\n        ctx.chart.destroy();\n      }\n      ctx.chart = new Chart(ctx, config);\n    }\n  }, [isModalOpen, loadedCount, totalCount]);\n  if (!isModalOpen) {\n    console.log(\"no\");\n    return null;\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"modal-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"close-button\",\n      onClick: onClose,\n      children: \"x\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chart-container\",\n      children: /*#__PURE__*/_jsxDEV(\"canvas\", {\n        id: \"myChart\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 5\n  }, this);\n};\n_s(Modal, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n_c = Modal;\nexport default Modal;\nvar _c;\n$RefreshReg$(_c, \"Modal\");","map":{"version":3,"names":["React","useState","useEffect","Chart","jsxDEV","_jsxDEV","Modal","isModalOpen","loadedCount","totalCount","onClose","_s","console","log","ctx","document","getElementById","data","labels","datasets","label","parseFloat","backgroundColor","hoverOffset","config","type","options","responsive","maintainAspectRatio","chart","destroy","className","children","onClick","fileName","_jsxFileName","lineNumber","columnNumber","id","_c","$RefreshReg$"],"sources":["/Users/hjyu/Documents/UW/Projects/MaskSearch/MaskSearch-Demo-final/Demo-GUI/frontend/src/components/Modal.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport Chart from 'chart.js/auto'; \nimport './Modal.css'\n\nconst Modal = ({ isModalOpen, loadedCount, totalCount, onClose}) => {\n\n  useEffect(() => {\n    if (isModalOpen) {\n        console.log(\"here\")\n      const ctx = document.getElementById('myChart');\n      const data = {\n        labels: ['Number of masks loaded from disk', 'Number of masks skipped'],\n        datasets: [{\n          label: 'Comparison of Loaded Masks vs. Skipped Masks',\n          data: [parseFloat(loadedCount), parseFloat(totalCount-loadedCount)],\n          backgroundColor: ['rgb(255, 99, 132)', 'rgb(54, 162, 235)'],\n          hoverOffset: 4\n        }]\n      };\n      const config = {\n        type: 'pie',\n        data: data,\n        options: {\n          responsive: true,\n          maintainAspectRatio: false,\n        }\n      };\n      //Destroy existing chart instance before creating a new one\n      if (ctx.chart) {\n        ctx.chart.destroy();\n      }\n      ctx.chart = new Chart(ctx, config);\n    }\n  }, [isModalOpen, loadedCount, totalCount]);\n\n  if (!isModalOpen) {\n    console.log(\"no\")\n    return null;\n  }\n  return (\n    <div className=\"modal-container\">\n      <button className=\"close-button\" onClick={onClose}>x</button>\n      <div className=\"chart-container\">\n        <canvas id=\"myChart\"></canvas>\n      </div>\n    </div>\n  );\n};\n\nexport default Modal;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAOC,KAAK,MAAM,eAAe;AACjC,OAAO,aAAa;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAEpB,MAAMC,KAAK,GAAGA,CAAC;EAAEC,WAAW;EAAEC,WAAW;EAAEC,UAAU;EAAEC;AAAO,CAAC,KAAK;EAAAC,EAAA;EAElET,SAAS,CAAC,MAAM;IACd,IAAIK,WAAW,EAAE;MACbK,OAAO,CAACC,GAAG,CAAC,MAAM,CAAC;MACrB,MAAMC,GAAG,GAAGC,QAAQ,CAACC,cAAc,CAAC,SAAS,CAAC;MAC9C,MAAMC,IAAI,GAAG;QACXC,MAAM,EAAE,CAAC,kCAAkC,EAAE,yBAAyB,CAAC;QACvEC,QAAQ,EAAE,CAAC;UACTC,KAAK,EAAE,8CAA8C;UACrDH,IAAI,EAAE,CAACI,UAAU,CAACb,WAAW,CAAC,EAAEa,UAAU,CAACZ,UAAU,GAACD,WAAW,CAAC,CAAC;UACnEc,eAAe,EAAE,CAAC,mBAAmB,EAAE,mBAAmB,CAAC;UAC3DC,WAAW,EAAE;QACf,CAAC;MACH,CAAC;MACD,MAAMC,MAAM,GAAG;QACbC,IAAI,EAAE,KAAK;QACXR,IAAI,EAAEA,IAAI;QACVS,OAAO,EAAE;UACPC,UAAU,EAAE,IAAI;UAChBC,mBAAmB,EAAE;QACvB;MACF,CAAC;MACD;MACA,IAAId,GAAG,CAACe,KAAK,EAAE;QACbf,GAAG,CAACe,KAAK,CAACC,OAAO,CAAC,CAAC;MACrB;MACAhB,GAAG,CAACe,KAAK,GAAG,IAAI1B,KAAK,CAACW,GAAG,EAAEU,MAAM,CAAC;IACpC;EACF,CAAC,EAAE,CAACjB,WAAW,EAAEC,WAAW,EAAEC,UAAU,CAAC,CAAC;EAE1C,IAAI,CAACF,WAAW,EAAE;IAChBK,OAAO,CAACC,GAAG,CAAC,IAAI,CAAC;IACjB,OAAO,IAAI;EACb;EACA,oBACER,OAAA;IAAK0B,SAAS,EAAC,iBAAiB;IAAAC,QAAA,gBAC9B3B,OAAA;MAAQ0B,SAAS,EAAC,cAAc;MAACE,OAAO,EAAEvB,OAAQ;MAAAsB,QAAA,EAAC;IAAC;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC,eAC7DhC,OAAA;MAAK0B,SAAS,EAAC,iBAAiB;MAAAC,QAAA,eAC9B3B,OAAA;QAAQiC,EAAE,EAAC;MAAS;QAAAJ,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAS;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC3B,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV,CAAC;AAAC1B,EAAA,CA3CIL,KAAK;AAAAiC,EAAA,GAALjC,KAAK;AA6CX,eAAeA,KAAK;AAAC,IAAAiC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}